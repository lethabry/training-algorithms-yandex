// Реализуйте двоичный поиск в массиве

// Формат ввода
// В первой строке входных данных содержатся натуральные числа N и K ().
// Во второй строке задаются N элементов первого массива, а в третьей строке – K элементов второго массива.
// Элементы обоих массивов - целые числа, каждое из которых по модулю не превосходит 109

// Формат вывода
// Требуется для каждого из K чисел вывести в отдельную строку "YES", если это число встречается в первом массиве, и "NO" в противном случае.

// Пример 1
// Ввод
// 10 10
// 1 61 126 217 2876 6127 39162 98126 712687 1000000000
// 100 6127 1 61 200 -10000 1 217 10000 1000000000

// Вывод
// NO
// YES
// YES
// YES
// NO
// NO
// YES
// YES
// NO
// YES

// Пример 2
// Ввод
// 10 10
// -8 -6 -4 -4 -2 -1 0 2 3 3
// 8 3 -3 -2 2 -1 2 9 -8 0

// Вывод
// NO
// YES
// NO
// YES
// YES
// YES
// YES
// NO
// YES
// YES

// Пример 3
// Ввод
// 10 5
// 1 2 3 4 5 6 7 8 9 10
// -2 0 4 9 12

// Вывод
// NO
// NO
// YES
// YES
// NO

function findNumInArray(data) {
  const source = data
    .toString()
    .trim()
    .split('  ')
    .map((a) => a.split(' ').map(Number));
  const [[n], [k], nArr, kArr] = source;
  const res = [];
  for (const kNum of kArr) {
    res.push(binSearch(nArr, kNum));
  }
  return res;
}

const binSearch = (arr, x) => {
  let l = 0,
    r = arr.length - 1;
  while (l < r) {
    let m = Math.floor((l + r) / 2);
    if (arr[m] >= x) {
      r = m;
    } else {
      l = m + 1;
    }
  }
  return arr[l] === x ? 'YES' : 'NO';
};
