// В школе решили на один прямоугольный стол поставить два прямоугольных ноутбука.
// Ноутбуки нужно поставить так, чтобы их стороны были параллельны сторонам стола.
// Определите, какие размеры должен иметь стол, чтобы оба ноутбука на него поместились, и площадь стола была минимальна.

// Формат ввода
// Вводится четыре натуральных числа, первые два задают размеры одного ноутбука, а следующие два — размеры второго. Числа не превышают 1000.

// Формат вывода
// Выведите два числа — размеры стола. Если возможно несколько ответов, выведите любой из них (но только один).

// Пример 1
// Ввод
// 10 2 2 10

// Вывод
// 20 2
// 2 20
// 4 10
// 10 4

// Пример 2
// Ввод
// 5 7 3 2

// Вывод
// 9 5
// 5 9

// В примерах указаны всевозможные ответы на поставленную задачу. Ваша программа должна вывести один из них.

function arrangementOfLaptops(data) {
  const [a1, b1, a2, b2] = data
    .toString()
    .trim()
    .split(' ')
    .map((n) => +n);
  // Определение возможных площадей для заданных размеров
  const sResults = [];
  const s1 = Math.max(a1, a2) * (b1 + b2);
  const s2 = Math.max(a1, b2) * (a2 + b1);
  const s3 = Math.max(b1, a2) * (a1 + b2);
  const s4 = Math.max(b1, b2) * (a1 + a2);
  sResults.push(s1, s2, s3, s4);
  // Опеределение сторон для минимально возможной площади
  const minSIndex = sResults.indexOf(Math.min(...sResults));
  if (minSIndex === 0) return [Math.max(a1, a2), b1 + b2].join(' ');
  else if (minSIndex === 1) return [Math.max(a1, b2), a2 + b1].join(' ');
  else if (minSIndex === 2) return [Math.max(b1, a2), a1 + b2].join(' ');
  else return [Math.max(b1, b2), a1 + a2].join(' ');
}

process.stdin.on('data', (data) => {
  const result = arrangementOfLaptops(data);
  process.stdout.write(result);
  process.exit();
});
